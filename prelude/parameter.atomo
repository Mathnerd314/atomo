operator right 0 =!

Parameter = Object clone
Parameter new: v := Parameter clone do:
  { set-default: v
  }

macro define: (x: Dispatch) as: root :=
  `(~(x as: Pattern) set-to: (Parameter new: ~root))

(p: Parameter) show :=
  "<" .. p _? show .. ">"

(p: Parameter) _? := p value: self

(p: Parameter) =! v :=
  (p) value: (self) = v

(p: Parameter) set-default: v :=
  (p) value: _ = v

with: (p: Parameter) as: new do: (action: Block) :=
  { old = p _?
    action before: { p =! new } after: { p =! old }
  } call

with-default: (p: Parameter) as: new do: (action: Block) :=
  { old = p _?
    action before: { p set-default: new } after: { p set-default: old }
  } call

macro with: (bs: List) do: action :=
  { ps = bs contents map:
      { pair |
        [p, v] = pair targets
        p -> v
      }

    chain = ps reduce-right:
      { pair x |
        `{ with: ~(pair from) as: ~(pair to) do: ~x }
      } with: action

    chain contents head
  } call

macro with-defaults: (bs: List) do: action :=
  { ps = bs contents map:
      { pair |
        [p, v] = pair targets
        p -> v
      }

    chain = ps reduce-right:
      { pair x |
        `{ with-default: ~(pair from) as: ~(pair to) do: ~x }
      } with: action

    chain contents head
  } call
