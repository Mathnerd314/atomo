macro (x += y) `(match: ~(x as: Pattern) on: (~x + ~y))
macro (x -= y) `(match: ~(x as: Pattern) on: (~x - ~y))

- (n: Number) := -1 * n

(n: Integer) even? := 2 divides?: n
(n: Integer) odd? := n even? not

(x: Integer) divides?: (y: Integer) :=
  (y % x) == 0

(x: Integer) divisible-by?: (y: Integer) :=
  y divides?: x
